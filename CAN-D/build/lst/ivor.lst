GAS LISTING C:\Users\marky\AppData\Local\Temp\ccuw1RTL.s 			page 1


   1              	# 1 "./components/spc560bxx_osal_component_rla/lib/src/ivor.s"
   1              	/*
   0              	
   0              	
   2              	    SPC5 RLA - Copyright (C) 2017 STMicroelectronics
   3              	
   4              	    Licensed under the Apache License, Version 2.0 (the "License").
   5              	    You may not use this file except in compliance with the License.
   6              	    You may obtain a copy of the License at
   7              	
   8              	        http://www.apache.org/licenses/LICENSE-2.0
   9              	
  10              	    Unless required by applicable law or agreed to in writing, software
  11              	    distributed under the License is distributed on an "AS IS" BASIS,
  12              	    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13              	    See the License for the specific language governing permissions and
  14              	    limitations under the License.
  15              	*/
  16              	
  17              	/**
  18              	 * @file    ivor.s
  19              	 * @brief   Kernel ISRs.
  20              	 *
  21              	 * @addtogroup PPC_CORE
  22              	 * @{
  23              	 */
  24              	
  25              	/*
  26              	 * Imports the configuration headers.
  27              	 */
  28              	#define _FROM_ASM_
  29              	#include "platform.h"
   1              	/*
   2              	    SPC5 RLA - Copyright (C) 2015 STMicroelectronics
   3              	
   4              	    Licensed under the Apache License, Version 2.0 (the "License").
   5              	    You may not use this file except in compliance with the License.
   6              	    You may obtain a copy of the License at
   7              	
   8              	        http://www.apache.org/licenses/LICENSE-2.0
   9              	
  10              	    Unless required by applicable law or agreed to in writing, software
  11              	    distributed under the License is distributed on an "AS IS" BASIS,
  12              	    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13              	    See the License for the specific language governing permissions and
  14              	    limitations under the License.
  15              	*/
  16              	
  17              	/**
  18              	 * @file    platform.h
  19              	 * @brief   platform file.
  20              	 */
  21              	
  22              	#ifndef _PLATFORM_H_
  23              	#define _PLATFORM_H_
  24              	
  25              	#include "core.h"
GAS LISTING C:\Users\marky\AppData\Local\Temp\ccuw1RTL.s 			page 2


   1              	/*
  26              	#include "toolchain.h"
   1              	/*
  27              	#include "intc.h"
   1              	/*
  28              	#if !defined(_FROM_ASM_)
  30              	#include "irq_cfg.h"
   1              	/*
  31              	#include "osal_cfg.h"
   1              	/*
  32              	#include "ivor_cfg.h"
   1              	/*
   2              	    SPC5 RLA - Copyright (C) 2017 STMicroelectronics
   3              	
   4              	    Licensed under the Apache License, Version 2.0 (the "License").
   5              	    You may not use this file except in compliance with the License.
   6              	    You may obtain a copy of the License at
   7              	
   8              	        http://www.apache.org/licenses/LICENSE-2.0
   9              	
  10              	    Unless required by applicable law or agreed to in writing, software
  11              	    distributed under the License is distributed on an "AS IS" BASIS,
  12              	    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13              	    See the License for the specific language governing permissions and
  14              	    limitations under the License.
  15              	*/
  16              	
  17              	/**
  18              	 * @file    ivor_cfg.h
  19              	 * @brief   IVOR Handling configuration.
  20              	 *
  21              	 * @addtogroup IVOR
  22              	 * @{
  23              	 */
  24              	
  25              	#ifndef _IVOR_CFG_H_
  26              	#define _IVOR_CFG_H_
  27              	
  28              	#include "osal_cfg.h"
  29              	
  33              	#include "boot.h"
   1              	/*
  34              	#include "ivor.h"
   1              	/*
   2              	    SPC5 RLA - Copyright (C) 2018 STMicroelectronics
   3              	
   4              	    Licensed under the Apache License, Version 2.0 (the "License").
   5              	    You may not use this file except in compliance with the License.
   6              	    You may obtain a copy of the License at
   7              	
   8              	        http://www.apache.org/licenses/LICENSE-2.0
   9              	
  10              	    Unless required by applicable law or agreed to in writing, software
  11              	    distributed under the License is distributed on an "AS IS" BASIS,
  12              	    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13              	    See the License for the specific language governing permissions and
  14              	    limitations under the License.
GAS LISTING C:\Users\marky\AppData\Local\Temp\ccuw1RTL.s 			page 3


  15              	*/
  16              	
  17              	/**
  18              	 * @file    ivor.h
  19              	 * @brief   Interrupt Handler Macros.
  20              	 *
  21              	 * @addtogroup PPC_CORE
  22              	 * @{
  23              	 */
  24              	
  25              	#define _FROM_ASM_
  26              	#include "core.h"
  27              	
  28              	#if !defined(__DOXYGEN__)
  29              	
  30              	 /* Context save.*/
  31              	.macro SAVE_CONTEXT
  32              	        e_stwu      sp, -80(sp)             /* Size of the extctx structure.*/
  33              	        e_stmvsrrw  8(sp)                   /* Saves PC, MSR (SRR0, SRR1).  */
  34              	        e_stmvsprw  16(sp)                  /* Saves CR, LR, CTR, XER.      */
  35              	        e_stmvgprw  32(sp)                  /* Saves GPR0, GPR3...GPR12.    */
  36              	.endm
  37              	
  38              	/* Context restore.*/
  39              	.macro RESTORE_CONTEXT
  40              	        e_lmvgprw   32(sp)                  /* Restores GPR0, GPR3...GPR12.  */
  41              	        e_lmvsprw   16(sp)                  /* Restores CR, LR, CTR, XER.    */
  42              	        e_lmvsrrw   8(sp)                   /* Restores PC, MSR (SRR0, SRR1).*/
  43              	        e_addi      sp, sp, 80              /* Back to the previous frame.   */
  44              	.endm
  45              	
  46              	/* Context save for critical class interrupt.*/
  47              	.macro SAVE_CONTEXT_CRITICAL
  48              	        e_stwu      sp, -80(sp)             /* Size of the extctx structure.*/
  49              	        e_stmvcsrrw  8(sp)                  /* Saves PC, MSR (CSRR0, CSRR1).*/
  50              	        e_stmvsprw  16(sp)                  /* Saves CR, LR, CTR, XER.      */
  51              	        e_stmvgprw  32(sp)                  /* Saves GPR0, GPR3...GPR12.    */
  52              	.endm
  53              	
  54              	/* Context restore for critical class interrupt.*/
  55              	.macro RESTORE_CONTEXT_CRITICAL
  56              	        e_lmvgprw   32(sp)                  /* Restores GPR0, GPR3...GPR12.    */
  57              	        e_lmvsprw   16(sp)                  /* Restores CR, LR, CTR, XER.      */
  58              	        e_lmvcsrrw   8(sp)                  /* Restores PC, MSR (CSRR0, CSRR1).*/
  59              	        e_addi      sp, sp, 80              /* Back to the previous frame.     */
  60              	.endm
  61              	
  62              	/* Context save for Machine Check class interrupt.*/
  63              	.macro SAVE_CONTEXT_MACHINE_CHECK
  64              	        e_stwu			sp, -80(sp)			/* Size of the extctx structure.*/
  65              	        e_stmvmcsrrw	8(sp)				/* Saves PC, MSR (MCSRR0, MCSRR1).*/
  66              	        e_stmvsprw		16(sp)				/* Saves CR, LR, CTR, XER.      */
  67              	        e_stmvgprw		32(sp)				/* Saves GPR0, GPR3...GPR12.    */
  68              	.endm
  69              	
  70              	/* Context restore for Machine Check class interrupt.*/
  71              	.macro RESTORE_MACHINE_CHECK
GAS LISTING C:\Users\marky\AppData\Local\Temp\ccuw1RTL.s 			page 4


  72              	        e_lmvgprw		32(sp)				/* Restores GPR0, GPR3...GPR12.    */
  73              	        e_lmvsprw		16(sp)				/* Restores CR, LR, CTR, XER.      */
  74              	        e_lmvmcsrrw		8(sp)				/* Restores PC, MSR (MCSRR0, MCSRR1).*/
  75              	        e_addi			sp, sp, 80			/* Back to the previous frame.     */
  76              	.endm
  77              	
  78              	/*
  79              	 * Prepare SRR0 and SRR1 registers as callback's parameters, moreover do some stuff
  80              	 * to calculate the returning address after handling IVOR exceptions, to avoid the
  81              	 * exception is raised again. The returning address is the next instruction of SRR0.
  82              	 */
  83              	.macro LOAD_SSR0_SSR1_PLUS
  84              			mfspr 		%r5,26				/* Load SRR0 -> r5 */
  85              			se_mr		%r3,%r5				/* Prepare 1st parameter (SRR0) for the callback. */
  86              			mfspr		%r4,27				/* Prepare 2nd parameter (SRR1) for the callback. */
  87              	        se_lhz 		%r6,0(%r5)			/* Determine opcode @ SRR0 */
  88              	        e_andi. 	%r7,%r6,0x9000
  89              	        e_cmpli 	0x0,%r7,0x1000		/* Check bit 31,28 only */
  90              	
  91              			se_bc		0x1,0x0,0x4			/* Skip next instruction if CR is true. */
  92              	        se_addi 	%r5,2				/* 0xx1 => 32 bit */
  93              	
  94              	        se_addi 	%r5,2				/* All others just 16 bit long */
  95              	
  96              	        e_stw       %r5, 8(sp)			/* Override the SRR0 previously saved in stack with the new one */
  97              	.endm
  98              	
  99              	/*
 100              	 * Prepare SRR0 and SRR1 registers as callback's parameters.
 101              	 */
 102              	.macro LOAD_SSR0_SSR1
 103              			mfspr 		%r3,26				/* Prepare 1st parameter (SRR0) for the callback. */
 104              			mfspr		%r4,27				/* Prepare 2nd parameter (SRR1) for the callback. */
 105              	.endm
 106              	
 107              	 /*
 108              	 * Prepare CSRR0 and CSRR1 registers as callback's parameters.
 109              	 */
 110              	.macro LOAD_CSSR0_CSSR1
 111              			mfspr 		%r3,58				/* Prepare 1st parameter (CSRR0) for the callback. */
 112              			mfspr		%r4,59				/* Prepare 2nd parameter (CSRR1) for the callback. */
 113              	.endm
 114              	
 115              	/*
 116              	 * Prepare MCSRR0 and MCSRR1 registers as callback's parameters, moreover do some stuff
 117              	 * to calculate the returning address after handling IVOR1 exception, to avoid the
 118              	 * exception is raised again. The returning address is the next instruction of MCSRR0.
 119              	 */
 120              	.macro LOAD_MCSSR0_MCSSR1
 121              			mfspr 		%r5,570				/* Load MCSRR0 -> r5 */
 122              			se_mr		%r3,%r5				/* Prepare 1st parameter (MCSRR0) for the callback. */
 123              			mfspr		%r4,571				/* Prepare 2nd parameter (MCSRR1) for the callback. */
 124              	        se_lhz 		%r6,0(%r5)			/* Determine opcode @ MCSRR0 */
 125              	        e_andi. 	%r7,%r6,0x9000
 126              	        e_cmpli 	0x0,%r7,0x1000		/* Check bit 31,28 only */
 127              	
 128              			se_bc		0x1,0x0,0x4			/* Skip next instruction if CR is true. */
GAS LISTING C:\Users\marky\AppData\Local\Temp\ccuw1RTL.s 			page 5


 129              	        se_addi 	%r5,2				/* 0xx1 => 32 bit */
 130              	
 131              	        se_addi 	%r5,2				/* All others just 16 bit long */
 132              	
 133              	        e_stw       %r5, 8(sp)			/* Override the MCSRR0 previously saved in stack with the new one 
 134              	.endm
 135              	
 136              	/*
 137              	 * Prepare DSRR0 and DSRR1 registers as callback's parameters, moreover do some stuff
 138              	 * to calculate the returning address after handling IVOR9 exception, to avoid the
 139              	 * exception is raised again. The returning address is the next instruction of MCSRR0.
 140              	 */
 141              	.macro LOAD_DSSR0_DSSR1
 142              			mfspr 		%r5,574				/* Load DSRR0 -> r5 */
 143              			se_mr		%r3,%r5				/* Prepare 1st parameter (DSRR0) for the callback. */
 144              			mfspr		%r4,575				/* Prepare 2nd parameter (DSRR1) for the callback. */
 145              	        se_lhz 		%r6,0(%r5)			/* Determine opcode @ DSRR0 */
 146              	        e_andi. 	%r7,%r6,0x9000
 147              	        e_cmpli 	0x0,%r7,0x1000		/* Check bit 31,28 only */
 148              	
 149              			se_bc		0x1,0x0,0x4			/* Skip next instruction if CR is true. */
 150              	        se_addi 	%r5,2				/* 0xx1 => 32 bit */
 151              	
 152              	        se_addi 	%r5,2				/* All others just 16 bit long */
 153              	
 154              	        e_stw       %r5, 8(sp)			/* Override the DSRR0 previously saved in stack with the new one *
 155              	.endm
 156              	
 157              	
 158              	
 159              	#endif /* !defined(__DOXYGEN__) */
 160              	
 161              	#if (CORE_VARIANT == 0)
 162              	#include "ivor_z0.h"
   1              	/*
 163              	#endif
GAS LISTING C:\Users\marky\AppData\Local\Temp\ccuw1RTL.s 			page 6


NO DEFINED SYMBOLS

NO UNDEFINED SYMBOLS
