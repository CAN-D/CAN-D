# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Proto/can-d.proto

import sys

_b = sys.version_info[0] < 3 and (lambda x: x) or (lambda x: x.encode("latin1"))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor.FileDescriptor(
    name="Proto/can-d.proto",
    package="",
    syntax="proto3",
    serialized_options=None,
    serialized_pb=_b(
        '\n\x11Proto/can-d.proto"z\n\x0c\x46romEmbedded\x12%\n\x0c\x63\x61nDataChunk\x18\x01 \x01(\x0b\x32\r.CanDataChunkH\x00\x12\x16\n\x0cgpsDataChunk\x18\x02 \x01(\x0cH\x00\x12\x1f\n\tlogFSInfo\x18\x03 \x01(\x0b\x32\n.LogFSInfoH\x00\x42\n\n\x08\x63ontents"S\n\nToEmbedded\x12 \n\x07\x63ommand\x18\x01 \x01(\x0b\x32\x0f.ControlCommand\x12#\n\x0ctransmitData\x18\x02 \x01(\x0b\x32\r.CanDataChunk":\n\x0e\x43ontrolCommand\x12(\n\x0b\x63ommandType\x18\x01 \x01(\x0e\x32\x13.ControlCommandType"+\n\tLogFSInfo\x12\x1e\n\x08logFiles\x18\x01 \x03(\x0b\x32\x0c.LogFileInfo"5\n\x0c\x43\x61nDataChunk\x12\n\n\x02id\x18\x01 \x01(\r\x12\x0c\n\x04\x64\x61ta\x18\x02 \x01(\x0c\x12\x0b\n\x03\x64lc\x18\x03 \x01(\r"?\n\x0bLogFileInfo\x12\x0c\n\x04size\x18\x01 \x01(\r\x12\x10\n\x08unixTime\x18\x02 \x01(\x04\x12\x10\n\x08\x66ileName\x18\x03 \x01(\t*|\n\x12\x43ontrolCommandType\x12\n\n\x06NO_CMD\x10\x00\x12\x0c\n\x08STOP_LOG\x10\x01\x12\r\n\tSTART_LOG\x10\x02\x12\x0c\n\x08MARK_LOG\x10\x03\x12\x12\n\x0eGET_LOGFS_INFO\x10\x04\x12\x0b\n\x07GET_LOG\x10\x05\x12\x0e\n\nDELETE_LOG\x10\x06\x62\x06proto3'
    ),
)

_CONTROLCOMMANDTYPE = _descriptor.EnumDescriptor(
    name="ControlCommandType",
    full_name="ControlCommandType",
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name="NO_CMD", index=0, number=0, serialized_options=None, type=None
        ),
        _descriptor.EnumValueDescriptor(
            name="STOP_LOG", index=1, number=1, serialized_options=None, type=None
        ),
        _descriptor.EnumValueDescriptor(
            name="START_LOG", index=2, number=2, serialized_options=None, type=None
        ),
        _descriptor.EnumValueDescriptor(
            name="MARK_LOG", index=3, number=3, serialized_options=None, type=None
        ),
        _descriptor.EnumValueDescriptor(
            name="GET_LOGFS_INFO", index=4, number=4, serialized_options=None, type=None
        ),
        _descriptor.EnumValueDescriptor(
            name="GET_LOG", index=5, number=5, serialized_options=None, type=None
        ),
        _descriptor.EnumValueDescriptor(
            name="DELETE_LOG", index=6, number=6, serialized_options=None, type=None
        ),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=455,
    serialized_end=579,
)
_sym_db.RegisterEnumDescriptor(_CONTROLCOMMANDTYPE)

ControlCommandType = enum_type_wrapper.EnumTypeWrapper(_CONTROLCOMMANDTYPE)
NO_CMD = 0
STOP_LOG = 1
START_LOG = 2
MARK_LOG = 3
GET_LOGFS_INFO = 4
GET_LOG = 5
DELETE_LOG = 6


_FROMEMBEDDED = _descriptor.Descriptor(
    name="FromEmbedded",
    full_name="FromEmbedded",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="canDataChunk",
            full_name="FromEmbedded.canDataChunk",
            index=0,
            number=1,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="gpsDataChunk",
            full_name="FromEmbedded.gpsDataChunk",
            index=1,
            number=2,
            type=12,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b(""),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="logFSInfo",
            full_name="FromEmbedded.logFSInfo",
            index=2,
            number=3,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[
        _descriptor.OneofDescriptor(
            name="contents",
            full_name="FromEmbedded.contents",
            index=0,
            containing_type=None,
            fields=[],
        )
    ],
    serialized_start=21,
    serialized_end=143,
)


_TOEMBEDDED = _descriptor.Descriptor(
    name="ToEmbedded",
    full_name="ToEmbedded",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="command",
            full_name="ToEmbedded.command",
            index=0,
            number=1,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="transmitData",
            full_name="ToEmbedded.transmitData",
            index=1,
            number=2,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=145,
    serialized_end=228,
)


_CONTROLCOMMAND = _descriptor.Descriptor(
    name="ControlCommand",
    full_name="ControlCommand",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="commandType",
            full_name="ControlCommand.commandType",
            index=0,
            number=1,
            type=14,
            cpp_type=8,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        )
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=230,
    serialized_end=288,
)


_LOGFSINFO = _descriptor.Descriptor(
    name="LogFSInfo",
    full_name="LogFSInfo",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="logFiles",
            full_name="LogFSInfo.logFiles",
            index=0,
            number=1,
            type=11,
            cpp_type=10,
            label=3,
            has_default_value=False,
            default_value=[],
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        )
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=290,
    serialized_end=333,
)


_CANDATACHUNK = _descriptor.Descriptor(
    name="CanDataChunk",
    full_name="CanDataChunk",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="id",
            full_name="CanDataChunk.id",
            index=0,
            number=1,
            type=13,
            cpp_type=3,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="data",
            full_name="CanDataChunk.data",
            index=1,
            number=2,
            type=12,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b(""),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="dlc",
            full_name="CanDataChunk.dlc",
            index=2,
            number=3,
            type=13,
            cpp_type=3,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=335,
    serialized_end=388,
)


_LOGFILEINFO = _descriptor.Descriptor(
    name="LogFileInfo",
    full_name="LogFileInfo",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="size",
            full_name="LogFileInfo.size",
            index=0,
            number=1,
            type=13,
            cpp_type=3,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="unixTime",
            full_name="LogFileInfo.unixTime",
            index=1,
            number=2,
            type=4,
            cpp_type=4,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="fileName",
            full_name="LogFileInfo.fileName",
            index=2,
            number=3,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b("").decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=390,
    serialized_end=453,
)

_FROMEMBEDDED.fields_by_name["canDataChunk"].message_type = _CANDATACHUNK
_FROMEMBEDDED.fields_by_name["logFSInfo"].message_type = _LOGFSINFO
_FROMEMBEDDED.oneofs_by_name["contents"].fields.append(
    _FROMEMBEDDED.fields_by_name["canDataChunk"]
)
_FROMEMBEDDED.fields_by_name[
    "canDataChunk"
].containing_oneof = _FROMEMBEDDED.oneofs_by_name["contents"]
_FROMEMBEDDED.oneofs_by_name["contents"].fields.append(
    _FROMEMBEDDED.fields_by_name["gpsDataChunk"]
)
_FROMEMBEDDED.fields_by_name[
    "gpsDataChunk"
].containing_oneof = _FROMEMBEDDED.oneofs_by_name["contents"]
_FROMEMBEDDED.oneofs_by_name["contents"].fields.append(
    _FROMEMBEDDED.fields_by_name["logFSInfo"]
)
_FROMEMBEDDED.fields_by_name[
    "logFSInfo"
].containing_oneof = _FROMEMBEDDED.oneofs_by_name["contents"]
_TOEMBEDDED.fields_by_name["command"].message_type = _CONTROLCOMMAND
_TOEMBEDDED.fields_by_name["transmitData"].message_type = _CANDATACHUNK
_CONTROLCOMMAND.fields_by_name["commandType"].enum_type = _CONTROLCOMMANDTYPE
_LOGFSINFO.fields_by_name["logFiles"].message_type = _LOGFILEINFO
DESCRIPTOR.message_types_by_name["FromEmbedded"] = _FROMEMBEDDED
DESCRIPTOR.message_types_by_name["ToEmbedded"] = _TOEMBEDDED
DESCRIPTOR.message_types_by_name["ControlCommand"] = _CONTROLCOMMAND
DESCRIPTOR.message_types_by_name["LogFSInfo"] = _LOGFSINFO
DESCRIPTOR.message_types_by_name["CanDataChunk"] = _CANDATACHUNK
DESCRIPTOR.message_types_by_name["LogFileInfo"] = _LOGFILEINFO
DESCRIPTOR.enum_types_by_name["ControlCommandType"] = _CONTROLCOMMANDTYPE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

FromEmbedded = _reflection.GeneratedProtocolMessageType(
    "FromEmbedded",
    (_message.Message,),
    dict(
        DESCRIPTOR=_FROMEMBEDDED,
        __module__="Proto.can_d_pb2"
        # @@protoc_insertion_point(class_scope:FromEmbedded)
    ),
)
_sym_db.RegisterMessage(FromEmbedded)

ToEmbedded = _reflection.GeneratedProtocolMessageType(
    "ToEmbedded",
    (_message.Message,),
    dict(
        DESCRIPTOR=_TOEMBEDDED,
        __module__="Proto.can_d_pb2"
        # @@protoc_insertion_point(class_scope:ToEmbedded)
    ),
)
_sym_db.RegisterMessage(ToEmbedded)

ControlCommand = _reflection.GeneratedProtocolMessageType(
    "ControlCommand",
    (_message.Message,),
    dict(
        DESCRIPTOR=_CONTROLCOMMAND,
        __module__="Proto.can_d_pb2"
        # @@protoc_insertion_point(class_scope:ControlCommand)
    ),
)
_sym_db.RegisterMessage(ControlCommand)

LogFSInfo = _reflection.GeneratedProtocolMessageType(
    "LogFSInfo",
    (_message.Message,),
    dict(
        DESCRIPTOR=_LOGFSINFO,
        __module__="Proto.can_d_pb2"
        # @@protoc_insertion_point(class_scope:LogFSInfo)
    ),
)
_sym_db.RegisterMessage(LogFSInfo)

CanDataChunk = _reflection.GeneratedProtocolMessageType(
    "CanDataChunk",
    (_message.Message,),
    dict(
        DESCRIPTOR=_CANDATACHUNK,
        __module__="Proto.can_d_pb2"
        # @@protoc_insertion_point(class_scope:CanDataChunk)
    ),
)
_sym_db.RegisterMessage(CanDataChunk)

LogFileInfo = _reflection.GeneratedProtocolMessageType(
    "LogFileInfo",
    (_message.Message,),
    dict(
        DESCRIPTOR=_LOGFILEINFO,
        __module__="Proto.can_d_pb2"
        # @@protoc_insertion_point(class_scope:LogFileInfo)
    ),
)
_sym_db.RegisterMessage(LogFileInfo)


# @@protoc_insertion_point(module_scope)
